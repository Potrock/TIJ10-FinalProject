#pragma config(Sensor, in1,    rightEye,        sensorReflection)
#pragma config(Sensor, in2,    leftEye,       sensorReflection)
#pragma config(Sensor, dgtl1,  distance,       sensorSONAR_inch)
#pragma config(Motor,  port1,           leftDrive,     tmotorVex269_HBridge, openLoop, reversed)
#pragma config(Motor,  port6,           arm,     tmotorServoStandard, openLoop)
#pragma config(Motor,  port10,          rightDrive,    tmotorVex269_HBridge, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
void findLight() {
	int difference;
	wait1Msec(1000);

	motor[leftDrive] = -60; //Spin left
	motor[rightDrive] = 60;

	while(SensorValue[leftEye] > 200) {}; //Robot will spin left until it finds the light.

	motor[leftDrive] = 0; //Stops the robot from turning.
	motor[rightDrive] = 0;



	while(SensorValue[leftEye] >= 25 && SensorValue[rightEye] >= 25 ) { //Calculates what side of the Robot the light is on.
		difference = SensorValue[leftEye] - SensorValue[rightEye];

		if(difference > 10) {
			motor[leftDrive] = 15; //Turns the robot left
			motor[rightDrive] = 110;
			} else if (difference < -10) {
			motor[leftDrive] = 110; //Turns the robot right
			motor[rightDrive] = 15;
			} else {
			//while(SensorValue[distance] > 10) { //When the Sonar is over 7 inches away, keep going forward.
			//motor[leftDrive] = 60;
			//motor[rightDrive] = 60;
			//}
			//When the Sonar is 7 inches away from the light, run this code.
			motor[leftDrive] = 100; //Forward
			motor[rightDrive] = 100;
		}
	}
	motor[leftDrive] = 0; //Stop robot
	motor[rightDrive] = 0;
	wait1Msec(500);
	motor[arm] = 40; //Arm down (Will change this)
}
void returnMiddle() { //The function to return the robot to the center, this will be changed in the future to be more efficient or might switch this to Sonar sensor to be more reliable.
	wait1Msec(1000);
	motor[leftDrive] = -60;
	motor[rightDrive] = -60;

	wait1Msec(3250);
	motor[leftDrive] = 0;
	motor[rightDrive] = 0;
	motor[arm] = -127; //Arm goes back up to neutral position (Will have to change this to be more reliable.)
	wait1Msec(1000); //Robot waits 2 seconds before repeating/ending.
}

task main() { //The main task. Above all of this is the functions that this task calls upon, this is what is run when the robot starts.
	motor[arm] = -127;
	int timesComplete;
	timesComplete = 0;
	while(timesComplete < 4) {
		findLight();
		returnMiddle();
		timesComplete++;
	}
}
